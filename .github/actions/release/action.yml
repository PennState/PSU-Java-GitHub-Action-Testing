inputs:
  MAVEN_OPTS: 
    description: 'MAVEN_OPTS'
    default: '-DallowSnapshots=false -DallowUntracked=true -Psign-artifacts'

  MAVEN_ARGS: 
    description: 'MAVEN_ARGS'
    default: '-DreleaseVersion=$${parsedVersion.majorVersion}.$${parsedVersion.minorVersion}.$${parsedVersion.incrementalVersion} -DdevelopmentVersion=$${parsedVersion.majorVersion}.$${parsedVersion.minorVersion}.$${parsedVersion.nextIncrementalVersion}-SNAPSHOT -DallowUntracked=true '
  
  SIGNING_PRIVATE: 
    description: 'SIGNING_PRIVATE'
    default: ''
  
  SIGNING_PASSPHRASE: 
    description: 'SIGNING_PASSPHRASE'
    default: ''
  
  OSSRH_USERNAME: 
    description: 'OSSRH_USERNAME'
    default: ''
  
  OSSRH_PASSWORD: 
    description: 'OSSRH_PASSWORD'
    default: ''
  
runs:
  using: "composite"
  steps: 
    - name: Build with Maven
      run: |
        git config --global user.name "ais-swe-ci"
        git config --global user.email "aitci@psu.edu"
        git fetch
        git checkout master
        git checkout develop
        echo -n $SIGNING_PRIVATE | base64 -di > ~/private.asc
        gpg --pinentry-mode loopback --batch --no-tty --yes --passphrase $SIGNING_PASSPHRASE --import ~/private.asc
        mvn -B clean build-helper:parse-version jgitflow:release-start ${{ inputs.MAVEN_ARGS }}
        mvn -B jgitflow:release-finish -Dgpg.passphrase=$SIGNING_PASSPHRASE ${{ inputs.MAVEN_ARGS }}
        git checkout develop
        git commit --amend -m '[skip-ci] Updating develop poms back to pre merge state'
        git push --all --follow-tags
      env:
        SIGNING_PRIVATE: ${{ input.SIGNING_PRIVATE }}
        SIGNING_PASSPHRASE: ${{ input.SIGNING_PASSPHRASE }}
        OSSRH_USERNAME: ${{ input.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ input.OSSRH_PASSWORD }}
        MAVEN_ARGS: ${{ input.MAVEN_ARGS}} $${{ input.$MAVEN_OPTS }}